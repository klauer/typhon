parameters:
  name: ''
  vmImage: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python36_tag:
        python.version: '3.6'
        pydm.channel: pcds-tag
      Python36_dev:
        python.version: '3.6'
        pydm.channel: pydm-dev
      Python37_tag:
        python.version: '3.7'
        pydm.channel: pcds-tag

  steps:
  # <Linux>
  - bash: |
      # Install & Start Windows Manager for Linux
      sudo apt-get install -y xvfb herbstluftwm
      sudo /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset
      sleep 3
      # Fix Anaconda permissions
      sudo install -d -m 0777 /usr/envs
    displayName: 'Linux - Prepare OS'
    condition: eq(variables['agent.os'], 'Linux' )
  - bash: |
      sudo /sbin/start-stop-daemon --start --pidfile /tmp/custom_herbstluftwm_99.pid --make-pidfile --background --exec /usr/bin/herbstluftwm
      sleep 1
    env:
      DISPLAY: :99.0
    displayName: 'Linux - Start herbstluftwm'
    condition: eq(variables['agent.os'], 'Linux' )
  # </Linux>

  # <MacOS>
  - bash: |
     # Fix Anaconda permissions
     sudo install -d -m 0777 /usr/local/miniconda/envs
    displayName: 'MacOS - Prepare OS'
    condition: eq(variables['agent.os'], 'Darwin' )
  # </MacOS>


  - task: CondaEnvironment@0
    displayName: 'Anaconda - Create - test-environment'
    inputs:
      environmentName: 'test-environment-$(python.version)'
      packageSpecs: 'python=$(python.version) conda-build anaconda-client'
      updateConda: true

  - bash: |
     conda config --set always_yes yes --set changeps1 no
     conda install conda-build anaconda-client
     conda update -q conda conda-build
     conda config --add channels $(pydm.channel)
     conda config --append channels pcds-tag
     conda config --append channels conda-forge
     # Useful for debugging any issues with conda
     conda config --add channels 'file:///$(Build.Repository.LocalPath)/bld-dir'
     conda info -a
    displayName: 'Anaconda - Configure - Add local bld-dir'

  - bash: 'conda build -q conda-recipe --python=$(python.version) --output-folder bld-dir'
    displayName: 'Anaconda - Build Package'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish - Anaconda Package'
    inputs:
      PathtoPublish: 'bld-dir'
      ArtifactName: 'anaconda_package'

  # <Windows>
  - bash: 'conda install -q typhon --file dev-requirements.txt -c conda-forge'
    displayName: 'Anaconda - Install Dependencies (Non-Windows)'
    condition: ne(variables['agent.os'], 'Windows_NT' )

  - bash: |
      conda install -q typhon -c conda-forge
      pip install -r dev-requirements.txt
    displayName: 'Anaconda - Install Dependencies (Windows)'
    condition: eq(variables['agent.os'], 'Windows_NT' )
  # </Windows>
  
  - bash: |
      python run_tests.py --cov=typhon --cov-report=xml:$(python.version)/coverage.xml --cov-report=html:$(python.version)/htmlcov --junitxml=$(python.version)/junit/test-results.xml
    displayName: 'Tests - Run'
    env:
      DISPLAY: :99.0

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/$(python.version)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/$(python.version)/**htmlcov'
      condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: 'Publish - Test Results'
    inputs:
      testResultsFiles: '$(System.DefaultWorkingDirectory)/$(python.version)/**/test-results.xml'
      testRunTitle: 'Tests for $(Agent.OS) - Python $(python.version)'
      condition: succeededOrFailed() 
