# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

#
# Parallel build
#
jobs:
  - template: .azure/template.yml
    parameters:
      name: Linux
      vmImage: 'Ubuntu 16.04'

  - template: .azure/template.yml
    parameters:
      name: Windows
      vmImage: 'vs2017-win2016'

  - template: .azure/template.yml
    parameters:
      name: MacOS
      vmImage: 'macOS-10.13'

  - job: 'Publish'
    dependsOn:
      - Linux
      - MacOS
      - Windows
    pool:
      vmImage: 'Ubuntu 16.04'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        architecture: 'x64'

    - script: python setup.py sdist
      displayName: 'Python - Build sdist'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish - Python Package'
      inputs:
        pathtoPublish: 'dist'
        artifactName: 'dist'

    - bash: |
        ls -lahtr $(Build.Repository.LocalPath)
      displayName: Debug - Staging Dir Content
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        artifactName: 'dist'
        downloadPath: $(Build.Repository.LocalPath)/artifacts

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        artifactName: 'anaconda_package'
        downloadPath: $(Build.Repository.LocalPath)/artifacts

    - bash: |
        ls -lahtr $(Build.Repository.LocalPath)/artifacts
      displayName: Debug - Staging Dir Content

    - bash: |
        if [ -d /usr/envs ]; then
            sudo install -d -m 0777 /usr/envs
        fi
        if [ -d /usr/local/miniconda/envs ]; then
            sudo install -d -m 0777 /usr/local/miniconda/envs
        fi
      displayName: 'Fix Anaconda permissions'

    - task: CondaEnvironment@0
      displayName: 'Anaconda - Create - Upload Environment'
      inputs:
        environmentName: 'test-environment'
        packageSpecs: 'python=3.6 conda-build conda-verify anaconda-client'
        updateConda: true

    - script: 'anaconda upload $(Build.Repository.LocalPath)/artifacts/anaconda_package/*/*.tar.bz2'
      displayName: 'Anaconda - Upload'
      env:
        ANACONDA_API_TOKEN: $(CONDA_UPLOAD_TOKEN_DEV)
